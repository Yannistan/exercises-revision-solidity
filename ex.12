 Address Adder: 0x73DE7eA001E7d3e5a278a6b0cf9062647B2e89d0
 Address Suber: 0x6Ffc5d17886B93060E55b80Fc14fB12b2E894281
 Address Multiplier: 0x6EdCcaeab7Ffa2B4e3DC2121D4707a9D3d06473a
 Address Divisor: 0xe3A707d29AfF67363E6aFCFF14E762dc34ca5bfA
 Address Calculator: 0x05b65B9F2d8091eAbCB54C4627165f92d4f5dB73

// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;
import './Adder.sol';
import './Suber.sol';
import './Multiplier.sol';
import './Divisor.sol';

contract Calculator {
    
    Adder private adder;
    Suber private suber;
    Multiplier private multiplier;
    Divisor private divisor;
    
    constructor(address _adder, address _suber, address _multiplier, address _divisor) public {
        adder = Adder(_adder);
        suber = Suber(_suber);
        multiplier = Multiplier(_multiplier);
        divisor = Divisor(_divisor);
    }
    
    function add(uint256 nb1, uint256 nb2) public view returns(uint256) {
        return adder.add(nb1, nb2);
    }
    
    function sub(uint256 nb1, uint256 nb2) public view returns(uint256) {
        return suber.sub(nb1, nb2);
    }
    
    function mul(uint256 nb1, uint256 nb2) public view returns(uint256) {
        return multiplier.mul(nb1, nb2);
    }
    
    function div(uint256 nb1, uint256 nb2) public view returns(uint256) {
        return divisor.div(nb1, nb2);
    }
    
}



